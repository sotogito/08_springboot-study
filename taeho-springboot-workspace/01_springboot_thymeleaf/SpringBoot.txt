## 스프링 부트 (Spring Boot) ##

1. 필요한 환경 설정을 최소화하고 개발자가 비즈니스 로직에 집중할 수 있도록 도와
   생산성을 크게 향상 시킬 수 있도록 스프링의 단점을 보완하여 만든 프로젝트

2. 스프링 프레임워크와 전혀 다른게 아닌 스프링프레임워크라는 큰 틀 속에 속하는 도구일 뿐

3. 특징
   1) 내장 톰캣을 가지고 있어 독립 실행이 가능한 스프링 애플리케이션 개발이 가능
       → JAR를 사용하여 자바 옵션만으로 배포 가능
   2) 통합 스타터를 제공하므로 빌드시스템(maven/gradle) 구성 간소화
       → 라이브러리 간의 의존 관계를 파악하고 라이브러리간에 필요한 다른 라이브러리들을 통합해둔 스타터를 제공
   3) 통합 스타터를 제공하므로 자동화된 스프링 설정 제공
       → Starter로 추가한 모듈을 바로 사용할 수 있도록 빈 설정을 자동으로 관리
   4) 번거로운 XML 설정을 요구하지 않음
       → web.xml, root-context.xml, servlet-context.xml 등 존재하지 않음
       → application.properties(.yaml, .yml) 프로퍼티 파일로 대부분의 환경 설정을 해결할 수 있음
   5) 애플리케이션의 모니터링과 관리를 위한 스프링 액츄에이터(Spring Actuator) 제공

4. Spring Boot 장점
   1) 각각의 의존성 버전을 쉽게 올리는게 가능 (수동으로 일일히 설정하던 기존 방식보다 안정된 버전 제공을 보장 받을 수 있음)
   2) 간단한 어노테이션 및 프로퍼티 설정으로 원하는 기능을 빠르게 적용 가능
   3) 별도의 외장 톰캣을 설치할 필요 없음
   4) 특정 라이브러리에 버그가 있을 경우 스프링 측에서 버그를 수정하면 수정된걸 제공 받기에 편리함

5. Spring Boot 단점
   1) 설정을 직접 커스터마이징 해야될 경우 기존의 Spring Framework를 사용하는 것과 같은 어려움을 겪을 수 있음
   2) 설정을 변경하고자 할 경우 정확한 동작 원리와 내부 코드를 직접 살펴봐야만 하는 불편함이 있음


* 초기세팅
1) Build, Execution, Deployment - Compiler : Build project automatically 체크
2) Advanced Settings - Compiler : Allow auto-make ~~~ 체크
3) Build, Execution, Deployment - Compiler - Annotation Processor : Enable annotation processor 활성화